# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

RESCOMP = windres
PCH = src/Hordes_pch.h
PCH_PLACEHOLDER = $(OBJDIR)/$(notdir $(PCH))
GCH = $(PCH_PLACEHOLDER).gch
INCLUDES += -Isrc -I../SFML/Windows_GCC/include -I../Eris_Utility/include
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef

ifeq ($(config),debug)
TARGETDIR = ../bin/windows_Debug-x86_64_gmake2
TARGET = $(TARGETDIR)/LeadTheHordes.exe
OBJDIR = ../obj/windows_Debug-x86_64_gmake2
DEFINES += -DSFML_STATIC -DHORDES_DEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -std=c++17
LIBS += ../Eris_Utility/bin/windows_Debug-x86_64_gmake2/Eris_Utility.lib -lsfml-graphics-s-d -lsfml-audio-s-d -lsfml-window-s-d -lsfml-system-s-d -lflac -lvorbisenc -lvorbisfile -lvorbis -logg -lopenal32 -lwinmm -lopengl32 -lfreetype -lgdi32
LDDEPS += ../Eris_Utility/bin/windows_Debug-x86_64_gmake2/Eris_Utility.lib
ALL_LDFLAGS += $(LDFLAGS) -L../Eris_Utility/lib/windows_Debug-x86_64_gmake2 -L../SFML/Windows_GCC/lib -L/usr/lib64 -m64 -IGNORE:4099
define POSTBUILDCMDS
	@echo Running postbuild commands
	xcopy /Q /E /Y /I configs ..\bin\windows_Debug-x86_64_gmake2\configs
endef

else ifeq ($(config),release)
TARGETDIR = ../bin/windows_Release-x86_64_gmake2
TARGET = $(TARGETDIR)/LeadTheHordes.exe
OBJDIR = ../obj/windows_Release-x86_64_gmake2
DEFINES += -DSFML_STATIC -DHORDES_RELEASE
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++17
LIBS += ../Eris_Utility/bin/windows_Release-x86_64_gmake2/Eris_Utility.lib -lsfml-graphics-s -lsfml-audio-s -lsfml-window-s -lsfml-system-s -lflac -lvorbisenc -lvorbisfile -lvorbis -logg -lopenal32 -lwinmm -lgdi32 -lfreetype -lopengl32
LDDEPS += ../Eris_Utility/bin/windows_Release-x86_64_gmake2/Eris_Utility.lib
ALL_LDFLAGS += $(LDFLAGS) -L../Eris_Utility/lib/windows_Release-x86_64_gmake2 -L../SFML/Windows_GCC/lib -L/usr/lib64 -m64 -s -IGNORE:4099
define POSTBUILDCMDS
	@echo Running postbuild commands
	xcopy /Q /E /Y /I configs ..\bin\windows_Release-x86_64_gmake2\configs
endef

else ifeq ($(config),dist)
TARGETDIR = ../bin/windows_Dist-x86_64_gmake2
TARGET = $(TARGETDIR)/LeadTheHordes.exe
OBJDIR = ../obj/windows_Dist-x86_64_gmake2
DEFINES += -DSFML_STATIC -DHORDES_DIST
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++17
LIBS += ../Eris_Utility/bin/windows_Dist-x86_64_gmake2/Eris_Utility.lib -lsfml-graphics-s -lsfml-audio-s -lsfml-window-s -lsfml-system-s -lflac -lvorbisenc -lvorbisfile -lvorbis -logg -lopenal32 -lwinmm -lgdi32 -lfreetype -lopengl32
LDDEPS += ../Eris_Utility/bin/windows_Dist-x86_64_gmake2/Eris_Utility.lib
ALL_LDFLAGS += $(LDFLAGS) -L../Eris_Utility/lib/windows_Dist-x86_64_gmake2 -L../SFML/Windows_GCC/lib -L/usr/lib64 -m64 -s -IGNORE:4099
define POSTBUILDCMDS
	@echo Running postbuild commands
	xcopy /Q /E /Y /I configs ..\bin\windows_Dist-x86_64_gmake2\configs
endef

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/GameEngine.o
GENERATED += $(OBJDIR)/Hordes_pch.o
GENERATED += $(OBJDIR)/Utils.o
GENERATED += $(OBJDIR)/dt.o
GENERATED += $(OBJDIR)/main.o
OBJECTS += $(OBJDIR)/GameEngine.o
OBJECTS += $(OBJDIR)/Hordes_pch.o
OBJECTS += $(OBJDIR)/Utils.o
OBJECTS += $(OBJDIR)/dt.o
OBJECTS += $(OBJDIR)/main.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking LeadTheHordes
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning LeadTheHordes
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) del /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/GameEngine.o: src/GameEngine.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Hordes_pch.o: src/Hordes_pch.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/dt.o: src/core/dt.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/main.o: src/main.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Utils.o: src/misc/Utils.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif